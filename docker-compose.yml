version: "3.7"
services:
  base:
    build:
      context: .
      dockerfile: docker/base/Dockerfile
    image: base
    env_file: .env
    volumes:
      - .:/app:cached
  rails:
    build:
      context: .
      dockerfile: docker/rails/Dockerfile
    env_file: .env
    volumes:
      - node_modules:/app/frontend/node_modules:ro
      - assets:/app/public/assets:ro
      - repos:/app/tmp/repos
      - cache:/app/tmp/cache
      - .:/app:cached
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 3000:3000
    depends_on:
      - mongo
      - redis
      - base
    restart: ${DOCKER_RESTART}
  slack:
    build:
      context: .
      dockerfile: docker/slack/Dockerfile
    env_file: .env
    volumes:
      - cache:/app/tmp/cache
      - .:/app:cached
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - mongo
      - redis
      - base
    restart: on-failure
  sidekiq:
    build:
      context: .
      dockerfile: docker/sidekiq/Dockerfile
    env_file: .env
    volumes:
      - repos:/app/tmp/repos
      - cache:/app/tmp/cache
      - .:/app:cached
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - mongo
      - redis
      - base
    restart: ${DOCKER_RESTART}
  cron:
    build:
      context: .
      dockerfile: docker/cron/Dockerfile
    env_file: .env
    volumes:
      - cache:/app/tmp/cache
      - .:/app:cached
      - /var/run/docker.sock:/var/run/docker.sock
    restart: ${DOCKER_RESTART}
    depends_on:
      - base
  node:
    build:
      context: .
      dockerfile: docker/node/Dockerfile
    volumes:
      - node_modules:/app/frontend/node_modules:delegated
      - assets:/app/public/assets:delegated
      - .:/app
  mongo:
    image: mongo:4.4
    volumes:
      - db:/data/db
    restart: ${DOCKER_RESTART}
  redis:
    image: redis:5-alpine
    restart: ${DOCKER_RESTART}

volumes:
  assets:
  cache:
  node_modules:
  repos:
  db:
